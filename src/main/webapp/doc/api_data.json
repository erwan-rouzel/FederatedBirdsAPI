[  {    "type": "post",    "url": "/auth/token",    "title": "Generate authentication token",    "name": "PostAuthentication",    "group": "Authentication",    "parameter": {      "fields": {        "Header parameter": [          {            "group": "Header parameter",            "type": "String",            "optional": false,            "field": "login",            "description": "<p>The login of the user.</p>"          },          {            "group": "Header parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>The password of the user.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>The generated token for user.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n\"eyJhbGciOiJIUzUxMiJ9.eyJqdGkiOiIxIn0.Wekkpa98Ll3qzPsxy7iX-yDN2p-QlLPT5u_73vBwjMHaPwHGdS7-LRKjtx0Rvjsa8YRgKRAtqAWcy2FhTMVw7g\"",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "invalidLogin",            "description": "<p>Login did not match the specs</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "invalidPassword",            "description": "<p>Password did not match the specs</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad request\n{\n     \"status\": 400,\n     \"code\": \"invalidLogin\",\n     \"message\": \"Login did not match the specs\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./src/main/java/fr/ecp/sio/appenginedemo/api/TokenServlet.java",    "groupTitle": "Authentication"  },  {    "type": "delete",    "url": "/message/:id",    "title": "Delete Message",    "name": "DeleteMessage",    "group": "Message",    "parameter": {      "fields": {        "Header parameter": [          {            "group": "Header parameter",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>The token for user in form of &quot;Bearer {token}&quot;</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Void",            "optional": false,            "field": "null",            "description": "<p>null</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "unauthorizedOperation",            "description": "<p>You cannot edit a message which is not yours</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "invalidAuthorization",            "description": "<p>Invalid authorization header format</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n     \"status\": 401,\n     \"code\": \"invalidAuthorization\",\n     \"message\": \"Invalid authorization header format\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./src/main/java/fr/ecp/sio/appenginedemo/api/MessageServlet.java",    "groupTitle": "Message"  },  {    "type": "get",    "url": "/message/:id",    "title": "Get Message",    "name": "GetMessage",    "group": "Message",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the message.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "text",            "description": "<p>Text of the message.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>Date of the message.</p>"          },          {            "group": "Success 200",            "type": "User",            "optional": false,            "field": "user",            "description": "<p>User of the message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     \"id\": 5629499534213120,\n     \"text\": \"My new message...\",\n     \"date\": \"2015-12-16T14:29:06Z\",\n     \"user\": {\n         \"id\": 1,\n         \"login\": \"user1\",\n         \"avatar\": \"http://storage.googleapis.com/federatedbirds-storage/avatar-1.jpg\",\n         \"coverPicture\": \"\",\n         \"email\": \"user1@yopmail.com\",\n         \"password\": \"0b14d501a594442a01c6859541bcb3e8164d183d32937b851835442f69d5c94e\"\n     }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "messageNotFound",            "description": "<p>The message with ID {id} does not exist</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n     \"status\": 404,\n     \"code\": \"messageNotFound\",\n     \"message\": \"The message with ID 123 does not exist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./src/main/java/fr/ecp/sio/appenginedemo/api/MessageServlet.java",    "groupTitle": "Message"  },  {    "type": "get",    "url": "/messages",    "title": "List of messages",    "name": "GetMessages",    "group": "Message",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "messages",            "description": "<p>List of messages.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./src/main/java/fr/ecp/sio/appenginedemo/api/MessagesServlet.java",    "groupTitle": "Message"  },  {    "type": "post",    "url": "/message/:id",    "title": "Update Message",    "name": "PostMessage",    "group": "Message",    "parameter": {      "fields": {        "Header parameter": [          {            "group": "Header parameter",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>The token for user in form of &quot;Bearer {token}&quot;</p>"          }        ],        "Body parameter": [          {            "group": "Body parameter",            "type": "String",            "optional": false,            "field": "JSON",            "description": "<p>representation of the message like {&quot;text&quot;: &quot;New value for text...&quot;}</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the message.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "text",            "description": "<p>Text of the message.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>Date of the message.</p>"          },          {            "group": "Success 200",            "type": "User",            "optional": false,            "field": "user",            "description": "<p>User of the message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     \"id\": 5629499534213120,\n     \"text\": \"My new message...\",\n     \"date\": \"2015-12-16T14:29:06Z\",\n     \"user\": {\n         \"id\": 1,\n         \"login\": \"user1\",\n         \"avatar\": \"http://storage.googleapis.com/federatedbirds-storage/avatar-1.jpg\",\n         \"coverPicture\": \"\",\n         \"email\": \"user1@yopmail.com\",\n         \"password\": \"0b14d501a594442a01c6859541bcb3e8164d183d32937b851835442f69d5c94e\"\n     }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "unauthorizedOperation",            "description": "<p>You cannot edit a message which is not yours</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "invalidAuthorization",            "description": "<p>Invalid authorization header format</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n     \"status\": 401,\n     \"code\": \"invalidAuthorization\",\n     \"message\": \"Invalid authorization header format\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./src/main/java/fr/ecp/sio/appenginedemo/api/MessageServlet.java",    "groupTitle": "Message"  },  {    "type": "post",    "url": "/messages",    "title": "Post Message",    "name": "PostMessages",    "group": "Message",    "parameter": {      "fields": {        "Header parameter": [          {            "group": "Header parameter",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>The token for user in form of &quot;Bearer {token}&quot;</p>"          }        ],        "Body parameter": [          {            "group": "Body parameter",            "type": "String",            "optional": false,            "field": "-",            "description": "<p>JSON representation of the message in form {&quot;text&quot;: &quot;My message...&quot;}</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>ID of the created message.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "text",            "description": "<p>Text of the created message.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>Date of the created message.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     \"id\": 5629499534213120,\n     \"text\": \"My new message...\",\n     \"date\": \"2015-12-16T14:29:06Z\",\n     \"user\": {\n         \"id\": 1,\n         \"login\": \"user1\",\n         \"avatar\": \"http://storage.googleapis.com/federatedbirds-storage/avatar-1.jpg\",\n         \"coverPicture\": \"\",\n         \"email\": \"user1@yopmail.com\",\n         \"password\": \"0b14d501a594442a01c6859541bcb3e8164d183d32937b851835442f69d5c94e\"\n     }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "invalidAuthorization",            "description": "<p>Invalid authorization header format</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n     \"status\": 401,\n     \"code\": \"invalidAuthorization\",\n     \"message\": \"Invalid authorization header format\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./src/main/java/fr/ecp/sio/appenginedemo/api/MessagesServlet.java",    "groupTitle": "Message"  },  {    "type": "delete",    "url": "/user",    "title": "Delete User",    "name": "DeleteUser",    "group": "User",    "parameter": {      "fields": {        "Header parameter": [          {            "group": "Header parameter",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>The token for user in form of &quot;Bearer {token}&quot;</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Void",            "optional": false,            "field": "null",            "description": "<p>null</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "invalidAuthorization",            "description": "<p>Invalid authorization header format</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n     \"status\": 401,\n     \"code\": \"invalidAuthorization\",\n     \"message\": \"Invalid authorization header format\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./src/main/java/fr/ecp/sio/appenginedemo/api/UserServlet.java",    "groupTitle": "User"  },  {    "type": "get",    "url": "/user/:id",    "title": "Request User information",    "name": "GetUser",    "group": "User",    "parameter": {      "fields": {        "Header parameter": [          {            "group": "Header parameter",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>The token for user in form of &quot;Bearer {token}&quot;</p>"          }        ],        "Url parameter": [          {            "group": "Url parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Users unique ID. This ID can be &quot;me&quot; for currently authenticated user.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "login",            "description": "<p>Login of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "avatar",            "description": "<p>Avatar of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "coverPicture",            "description": "<p>Cover picture of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of the User (hidden if is different from authenticated user)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password hash of the user</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     \"id\": 6,\n      \"login\": \"user2\",\n      \"avatar\": \"http://www.gravatar.com/avatar/a2fbe04611692ba9b7a5e148786419d7?d=wavatar\",\n      \"coverPicture\": \"\",\n      \"email\": \"*\",\n      \"password\": \"598a1a400c1dfdf36974e69d7e1bc98593f2e15015eed8e9b7e47a83b31693d5\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "userNotFound",            "description": "<p>The id of the User was not found.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "missingIdParameter",            "description": "<p>You must specify an id parameter.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n     \"status\": 400,\n     \"code\": \"userNotFound\",\n     \"message\": \"The user you requested does not exist\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./src/main/java/fr/ecp/sio/appenginedemo/api/UserServlet.java",    "groupTitle": "User"  },  {    "type": "get",    "url": "/users/:id/[followed|followers]",    "title": "List Users",    "name": "GetUsers",    "group": "User",    "parameter": {      "fields": {        "Header parameter": [          {            "group": "Header parameter",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>The token for user in form of &quot;Bearer {token}&quot;</p>"          },          {            "group": "Header parameter",            "type": "String",            "optional": false,            "field": "limit",            "description": "<p>Limit of users retrieved per request (for pagination)</p>"          },          {            "group": "Header parameter",            "type": "String",            "optional": false,            "field": "continuationTolen",            "description": "<p>Token to get the next page (for pagination)</p>"          }        ],        "Url parameter": [          {            "group": "Url parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Users unique ID. This ID can be &quot;me&quot; for currently authenticated user.</p>"          },          {            "group": "Url parameter",            "type": "String",            "optional": false,            "field": "followed",            "description": "<p>|followers Type of users relations to retrieve (can be &quot;followed&quot; or &quot;followers&quot;). All users if not specified.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "array",            "description": "<p>List of all users by default. If &quot;followed&quot; or &quot;followers&quot; parameters are specified, then list of corresponding users only.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "login",            "description": "<p>Login of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "avatar",            "description": "<p>Avatar of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "coverPicture",            "description": "<p>Cover picture of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of the User (hidden if is different from authenticated user).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password hash of the user.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n[\n      {\n        \"id\": 1,\n        \"login\": \"user1\",\n        \"avatar\": \"http://storage.googleapis.com/federatedbirds-storage/avatar-1.jpg\",\n        \"coverPicture\": \"\",\n        \"email\": \"user1@yopmail.com\",\n        \"password\": \"0b14d501a594442a01c6859541bcb3e8164d183d32937b851835442f69d5c94e\"\n      },\n      {\n        \"id\": 1000001,\n        \"login\": \"user3\",\n        \"avatar\": \"http://www.gravatar.com/avatar/09e7572bb8bb7f8327302cd6fdb30e28?d=wavatar\",\n        \"coverPicture\": \"\",\n        \"email\": \"user3@yopmail.com\",\n        \"password\": \"bc4f7f75a897a48c660a15077318226a17d01b320dea8aacf63f1b29fcfcf2a1\"\n      },\n      {\n        \"id\": 2000001,\n        \"login\": \"user4\",\n        \"avatar\": \"http://www.gravatar.com/avatar/b590919a75487a843e13bcc99e8e9fc6?d=wavatar\",\n        \"coverPicture\": \"\",\n        \"email\": \"user4@yopmail.com\",\n        \"password\": \"a75c2000f6ca4b31cba2c85fd2c7ab7582967ffb929ce938e137b0f4dd15a930\"\n      }\n    ]",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "invalidAuthorization",            "description": "<p>Invalid authorization header format</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n     \"status\": 401,\n     \"code\": \"invalidAuthorization\",\n     \"message\": \"Invalid authorization header format\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./src/main/java/fr/ecp/sio/appenginedemo/api/UsersServlet.java",    "groupTitle": "User"  },  {    "type": "post",    "url": "/user/:id",    "title": "Update User information",    "name": "PostUser",    "group": "User",    "parameter": {      "fields": {        "Header parameter": [          {            "group": "Header parameter",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>The token for user in form of &quot;Bearer {token}&quot;</p>"          }        ],        "Url parameter": [          {            "group": "Url parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Users unique ID. This ID can be &quot;me&quot; for currently authenticated user.</p>"          }        ],        "Body parameter": [          {            "group": "Body parameter",            "type": "String",            "optional": false,            "field": "-",            "description": "<p>Json representation of the user. Not all the attributes have to defined but you can define only the attributes which are to be updated.</p>"          }        ],        "Url query parameter": [          {            "group": "Url query parameter",            "type": "Boolean",            "optional": true,            "field": "followed",            "description": "<p>Boolean which tells if we are following the user (true|false)</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "login",            "description": "<p>Login of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "avatar",            "description": "<p>Avatar of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "coverPicture",            "description": "<p>Cover picture of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of the User (hidden if is different from authenticated user)</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password hash of the user</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n     \"id\": 6,\n      \"login\": \"user2\",\n      \"avatar\": \"http://www.gravatar.com/avatar/a2fbe04611692ba9b7a5e148786419d7?d=wavatar\",\n      \"coverPicture\": \"\",\n      \"email\": \"user2@yopmail.com\",\n      \"password\": \"598a1a400c1dfdf36974e69d7e1bc98593f2e15015eed8e9b7e47a83b31693d5\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "invalidAuthorization",            "description": "<p>Invalid authorization header format</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "userNotFound",            "description": "<p>The id of the User was not found.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "unauthorizedOperation",            "description": "<p>You cannot edit another user than yourself.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "invalidLogin",            "description": "<p>Login did not match the specs</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "invalidPassword",            "description": "<p>Password did not match the specs</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "duplicateLogin",            "description": "<p>Duplicate login</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "duplicateEmail",            "description": "<p>Login Duplicate email</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "invalidAvatar",            "description": "<p>Invalid avatar image</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "invalidCoverPicture",            "description": "<p>Invalid cover picture image</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n     \"status\": 404,\n     \"code\": \"userNotFound\",\n     \"message\": \"The user you requested does not exist\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n     \"status\": 401,\n     \"code\": \"unauthorizedOperation\",\n     \"message\": \"You cannot edit another user than yourself\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./src/main/java/fr/ecp/sio/appenginedemo/api/UserServlet.java",    "groupTitle": "User"  },  {    "type": "post",    "url": "/users",    "title": "Create User",    "name": "PostUsers",    "group": "User",    "parameter": {      "fields": {        "Header parameter": [          {            "group": "Header parameter",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>The token for user in form of &quot;Bearer {token}&quot;</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Newly generated token for user.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n\"eyJhbGciOiJIUzUxMiJ9.eyJqdGkiOiIxIn0.Wekkpa98Ll3qzPsxy7iX-yDN2p-QlLPT5u_73vBwjMHaPwHGdS7-LRKjtx0Rvjsa8YRgKRAtqAWcy2FhTMVw7g\"",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "invalidRequest",            "description": "<p>Invalid JSON body</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "invalidLogin",            "description": "<p>Login did not match the specs</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "invalidPassword",            "description": "<p>Password did not match the specs</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "duplicateLogin",            "description": "<p>Duplicate login</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "duplicateEmail",            "description": "<p>Login Duplicate email</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad request\n{\n     \"status\": 400,\n     \"code\": \"invalidRequest\",\n     \"message\": \"Invalid JSON body\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./src/main/java/fr/ecp/sio/appenginedemo/api/UsersServlet.java",    "groupTitle": "User"  },  {    "type": "put",    "url": "/user/avatar",    "title": "Update User avatar image",    "name": "PutUserAvatar",    "group": "User",    "parameter": {      "fields": {        "Body parameter": [          {            "group": "Body parameter",            "type": "File",            "optional": false,            "field": "-",            "description": "<p>Content of the image file</p>"          }        ],        "Header parameter": [          {            "group": "Header parameter",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>The token for user in form of &quot;Bearer {token}&quot;</p>"          },          {            "group": "Header parameter",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>Mime type of the file (eg. image/jpeg)</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "servingUrl",            "description": "<p>Url of stored avatar image.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\"servingUrl\": \"http://storage.googleapis.com/federatedbirds-storage/avatar-1.jpg\"}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "invalidAuthorization",            "description": "<p>Invalid authorization header format</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "mimetypeError",            "description": "<p>There was an error in the Content-Type given as header</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "cannotSaveImage",            "description": "<p>Wraps error coming from the data layer</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n     \"status\": 401,\n     \"code\": \"invalidAuthorization\",\n     \"message\": \"Invalid authorization header format\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./src/main/java/fr/ecp/sio/appenginedemo/api/UserServlet.java",    "groupTitle": "User"  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./doc/main.js",    "group": "_Users_erwanrouzel_IdeaProjects_AppEngineDemo_doc_main_js",    "groupTitle": "_Users_erwanrouzel_IdeaProjects_AppEngineDemo_doc_main_js",    "name": ""  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./src/main/webapp/doc/main.js",    "group": "_Users_erwanrouzel_IdeaProjects_AppEngineDemo_src_main_webapp_doc_main_js",    "groupTitle": "_Users_erwanrouzel_IdeaProjects_AppEngineDemo_src_main_webapp_doc_main_js",    "name": ""  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./target/appengine-demo-1.0-SNAPSHOT/doc/main.js",    "group": "_Users_erwanrouzel_IdeaProjects_AppEngineDemo_target_appengine_demo_1_0_SNAPSHOT_doc_main_js",    "groupTitle": "_Users_erwanrouzel_IdeaProjects_AppEngineDemo_target_appengine_demo_1_0_SNAPSHOT_doc_main_js",    "name": ""  }]
